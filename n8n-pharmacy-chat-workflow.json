{
  "name": "farmacia-vanaci-advanced",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "chat",
        "responseMode": "responseNode",
        "options": {
          "allowedOrigins": "*"
        }
      },
      "id": "625a0c49-7cb9-4b91-920f-aa12ed951292",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [0, 0],
      "webhookId": "pharmacy-chat"
    },
    {
      "parameters": {
        "jsCode": "// Process incoming chat request\nconst userMessage = $input.first().json.message;\nconst chatHistory = $input.first().json.chatHistory || [];\nconst sessionId = $input.first().json.sessionId || `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n\n// Create system prompt for main AI Agent\nconst systemPrompt = `You are the main AI assistant for \"Farmácia Vanaci\", a modern pharmacy e-commerce platform. You coordinate with specialized tools to help customers with:\n\n**Your Role:**\n- Understand customer intentions and use appropriate tools\n- Provide friendly, professional pharmacy assistance\n- Maintain conversation context and customer session\n\n**Available Tools:**\n1. **ProductSearchTool** - Search and get product information from database\n2. **CartManagementTool** - Add, remove, update items in shopping cart\n3. **CheckoutTool** - Process checkout and order finalization\n\n**Pharmacy Information:**\n- Name: Farmácia Vanaci\n- Specializes in medications, health products, and wellness items\n- Online platform with real-time inventory\n- Session ID: ${sessionId}\n\n**Guidelines:**\n- Always maintain professional, empathetic tone\n- Use tools when customers ask about products, cart operations, or checkout\n- Provide clear explanations of medication usage and side effects\n- Remind customers to consult healthcare professionals for medical advice\n- Include appropriate medical disclaimers\n\n**Important:**\n- You cannot diagnose conditions or prescribe medications\n- For prescription drugs, customers must consult licensed pharmacists\n- In emergencies, direct to emergency services\n\nCustomer message: \"${userMessage}\"\nSession ID: ${sessionId}\n\nRespond helpfully and use appropriate tools when needed.`;\n\nreturn {\n  userMessage,\n  chatHistory,\n  sessionId,\n  systemPrompt,\n  baseUrl: 'http://localhost:3000/api'\n};"
      },
      "id": "55e198fe-1799-4cef-bef2-27cdd0b212d6",
      "name": "Process Input",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [300, 0]
    },
    {
      "parameters": {
        "sessionIdKey": "sessionId",
        "contextWindowSize": 10
      },
      "id": "memory-node-12345",
      "name": "Simple Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1,
      "position": [500, 200]
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "={{ $json.systemPrompt }}"
        }
      },
      "id": "bb995adb-c3cf-4b1b-b8c1-d16d4025ef1f",
      "name": "Main AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1,
      "position": [600, 0]
    },
    {
      "parameters": {
        "name": "ProductSearchTool",
        "description": "Search for products in the pharmacy database. Use this when customers ask about medications, health products, prices, availability, or product specifications.",
        "method": "GET",
        "url": "=http://localhost:3000/api/products",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "search",
              "value": "={{ $fromAI('query', 'Search term or product name') }}"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "neverError": true
            }
          }
        }
      },
      "id": "f8e7d6c5-b4a3-9281-c7e6-f5d4e3c2b1a0",
      "name": "ProductSearchTool",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1,
      "position": [800, -200]
    },
    {
      "parameters": {
        "name": "CartManagementTool",
        "description": "Manage shopping cart operations. Use this when customers want to add items to cart, remove items, update quantities, or view cart contents.",
        "method": "POST",
        "url": "=http://localhost:3000/api/cart/{{ $fromAI('action', 'Cart operation: add, remove, update, or view') }}",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "productId",
              "value": "={{ $fromAI('productId', 'Product ID for add/remove/update operations') }}"
            },
            {
              "name": "quantity",
              "value": "={{ $fromAI('quantity', 'Quantity for add/update operations') }}"
            },
            {
              "name": "sessionId",
              "value": "={{ $('Process Input').first().json.sessionId }}"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "neverError": true
            }
          }
        }
      },
      "id": "a9b8c7d6-e5f4-3210-9876-543210fedcba",
      "name": "CartManagementTool",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1,
      "position": [800, 0]
    },
    {
      "parameters": {
        "name": "CheckoutTool",
        "description": "Process checkout and finalize orders. Use this when customers want to complete their purchase.",
        "method": "POST",
        "url": "=http://localhost:3000/api/checkout",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "sessionId",
              "value": "={{ $('Process Input').first().json.sessionId }}"
            },
            {
              "name": "customerInfo",
              "value": "={{ $fromAI('customerInfo', 'Customer details object with name, email, and address') }}"
            },
            {
              "name": "paymentMethod",
              "value": "={{ $fromAI('paymentMethod', 'Payment method selection', 'credit_card') }}"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "neverError": true
            }
          }
        }
      },
      "id": "1a2b3c4d-5e6f-7890-abcd-ef1234567890",
      "name": "CheckoutTool",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1,
      "position": [800, 200]
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Process Input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Input": {
      "main": [
        [
          {
            "node": "Main AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "Main AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "ProductSearchTool": {
      "ai_tool": [
        [
          {
            "node": "Main AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "CartManagementTool": {
      "ai_tool": [
        [
          {
            "node": "Main AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "CheckoutTool": {
      "ai_tool": [
        [
          {
            "node": "Main AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2024-01-15T10:30:00.000Z",
  "versionId": "1"
}
