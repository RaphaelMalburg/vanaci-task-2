import { tool } from "ai";
import { z } from "zod";
import type { ToolResult, StoreInfo, Promotion } from "../types";

// Fun√ß√£o auxiliar para fazer chamadas √† API
async function apiCall(endpoint: string, options: RequestInit = {}) {
  // Usar URL absoluta para funcionar no contexto do servidor
  const BASE_URL = process.env.NODE_ENV === "production" ? process.env.NEXT_PUBLIC_APP_URL || "https://farmacia-vanaci.vercel.app" : "http://localhost:3007";

  const response = await fetch(`${BASE_URL}/api${endpoint}`, {
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
    ...options,
  });

  if (!response.ok) {
    throw new Error(`API Error: ${response.statusText}`);
  }

  return response.json();
}

// Tool: Mostrar hor√°rio de funcionamento
export const showStoreHoursTool = tool({
  description: "Mostra o hor√°rio de funcionamento da farm√°cia",
  inputSchema: z.object({}),
  execute: async (): Promise<ToolResult> => {
    const storeInfo: StoreInfo = {
      hours: "Segunda a Sexta: 8h √†s 21h\nS√°bado: 9h √†s 19h\nDomingo: 10h √†s 18h",
      phone: "+351 21 123 4567",
      address: "Rua da Sa√∫de, 123 - Centro Hist√≥rico, Lisboa - Portugal",
    };

    const currentHour = new Date().getHours();
    const currentDay = new Date().getDay(); // 0 = domingo, 1 = segunda, etc.

    let isOpen = false;
    let nextOpenTime = "";

    if (currentDay >= 1 && currentDay <= 5) {
      // Segunda a sexta
      isOpen = currentHour >= 8 && currentHour < 21;
      if (!isOpen) {
        nextOpenTime = currentHour < 8 ? "Abre √†s 8h" : "Abre amanh√£ √†s 8h";
      }
    } else if (currentDay === 6) {
      // S√°bado
      isOpen = currentHour >= 9 && currentHour < 19;
      if (!isOpen) {
        nextOpenTime = currentHour < 9 ? "Abre √†s 9h" : "Abre domingo √†s 10h";
      }
    } else {
      // Domingo
      isOpen = currentHour >= 10 && currentHour < 18;
      if (!isOpen) {
        nextOpenTime = currentHour < 10 ? "Abre √†s 10h" : "Abre segunda √†s 8h";
      }
    }

    const status = isOpen ? "üü¢ ABERTA AGORA" : `üî¥ FECHADA - ${nextOpenTime}`;

    const message = `**Farm√°cia Vanaci** ${status}\n\n**Hor√°rios:**\n${storeInfo.hours}\n\n**Contacto:**\nüìû ${storeInfo.phone}\nüìç ${storeInfo.address}`;

    return {
      success: true,
      message,
      data: { ...storeInfo, isOpen, nextOpenTime },
    };
  },
});

// Tool: Mostrar promo√ß√µes
export const showPromotionsTool = tool({
  description: "Mostra as promo√ß√µes e ofertas especiais da farm√°cia",
  inputSchema: z.object({}),
  execute: async (): Promise<ToolResult> => {
    const promotions: Promotion[] = [
      {
        id: "promo1",
        title: "üéØ Primeira Compra",
        description: "15% de desconto na primeira compra",
        discount: 15,
        validUntil: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000), // 30 dias
      },
      {
        id: "promo2",
        title: "üíä Vitaminas em Oferta",
        description: "Leve 3 pague 2 em vitaminas selecionadas",
        discount: 33,
        validUntil: new Date(Date.now() + 15 * 24 * 60 * 60 * 1000), // 15 dias
      },
      {
        id: "promo3",
        title: "üöö Portes Gr√°tis",
        description: "Portes gr√°tis em compras acima de ‚Ç¨ 50",
        discount: 0,
        validUntil: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000), // 7 dias
      },
      {
        id: "promo4",
        title: "üè• Desconto Sa√∫de",
        description: "20% off em medicamentos para hipertens√£o",
        discount: 20,
        validUntil: new Date(Date.now() + 20 * 24 * 60 * 60 * 1000), // 20 dias
      },
    ];

    const activePromotions = promotions.filter((promo) => promo.validUntil > new Date());

    if (activePromotions.length === 0) {
      return {
        success: true,
        message: "N√£o h√° promo√ß√µes ativas no momento. Fique atento √†s nossas redes sociais para novas ofertas!",
        data: { promotions: [] },
      };
    }

    const promoList = activePromotions
      .map((promo) => {
        const daysLeft = Math.ceil((promo.validUntil.getTime() - Date.now()) / (24 * 60 * 60 * 1000));
        const urgency = daysLeft <= 3 ? " ‚è∞ √öLTIMOS DIAS!" : "";
        return `${promo.title}${urgency}\n${promo.description}\nV√°lido por mais ${daysLeft} dias`;
      })
      .join("\n\n");

    const message = `**üéâ Promo√ß√µes Ativas:**\n\n${promoList}\n\nüí° Use os c√≥digos: PRIMEIRACOMPRA, SAUDE20, DESCONTO10`;

    return {
      success: true,
      message,
      data: { promotions: activePromotions },
    };
  },
});

// Tool: Contatar farmac√™utico
export const contactPharmacistTool = tool({
  description: "Conecta o usu√°rio com um farmac√™utico para d√∫vidas espec√≠ficas",
  inputSchema: z.object({
    query: z.string().describe("D√∫vida ou pergunta para o farmac√™utico"),
    urgency: z.enum(["baixa", "media", "alta"]).default("media").describe("N√≠vel de urg√™ncia da consulta"),
  }),
  execute: async ({ query, urgency }: { query: string; urgency: "baixa" | "media" | "alta" }) => {
    try {
      const result = await apiCall("/pharmacy/consult", {
        method: "POST",
        body: JSON.stringify({ query, urgency }),
      });

      return {
        ...result,
        message: "Consulta enviada ao farmac√™utico com sucesso!",
      };
    } catch (error) {
      throw new Error(`Erro ao enviar consulta: ${error instanceof Error ? error.message : "Erro desconhecido"}`);
    }
  },
});

// Tool: Informa√ß√µes sobre receita m√©dica
export const prescriptionInfoTool = tool({
  description: "Fornece informa√ß√µes sobre como enviar receitas m√©dicas",
  inputSchema: z.object({}),
  execute: async (): Promise<ToolResult> => {
    const message =
      `**üìã Como Enviar sua Receita M√©dica:**\n\n` +
      `**1. Foto da Receita:**\n` +
      `‚Ä¢ Tire uma foto clara e leg√≠vel\n` +
      `‚Ä¢ Certifique-se que todas as informa√ß√µes est√£o vis√≠veis\n` +
      `‚Ä¢ Inclua o carimbo e assinatura do m√©dico\n\n` +
      `**2. Formas de Envio:**\n` +
      `‚Ä¢ WhatsApp: (11) 9876-5432\n` +
      `‚Ä¢ Email: receitas@vanaci.com.br\n` +
      `‚Ä¢ Upload no site durante o checkout\n\n` +
      `**3. Medicamentos Controlados:**\n` +
      `‚Ä¢ Receita original obrigat√≥ria\n` +
      `‚Ä¢ Entrega apenas para o paciente ou respons√°vel\n` +
      `‚Ä¢ Documento com foto necess√°rio\n\n` +
      `**4. Prazo de Validade:**\n` +
      `‚Ä¢ Receita simples: 30 dias\n` +
      `‚Ä¢ Receita controlada: varia por medicamento\n\n` +
      `**5. D√∫vidas?**\n` +
      `Entre em contato com nosso farmac√™utico!`;

    return {
      success: true,
      message,
      data: {
        uploadMethods: ["whatsapp", "email", "website"],
        contacts: {
          whatsapp: "(11) 9876-5432",
          email: "receitas@vanaci.com.br",
        },
        requirements: {
          controlled: "Receita original + documento com foto",
          simple: "Foto da receita",
        },
      },
    };
  },
});

// Tool: Programa de fidelidade
export const loyaltyProgramTool = tool({
  description: "Informa√ß√µes sobre o programa de fidelidade da farm√°cia",
  inputSchema: z.object({}),
  execute: async (): Promise<ToolResult> => {
    const message =
      `**üéÅ Programa Vanaci Fidelidade:**\n\n` +
      `**Como Funciona:**\n` +
      `‚Ä¢ Ganhe 1 ponto a cada R$ 1,00 gasto\n` +
      `‚Ä¢ 100 pontos = R$ 10,00 de desconto\n` +
      `‚Ä¢ Pontos n√£o expiram\n\n` +
      `**Benef√≠cios Exclusivos:**\n` +
      `‚Ä¢ üéÇ Desconto especial no anivers√°rio (20%)\n` +
      `‚Ä¢ üìß Ofertas exclusivas por email\n` +
      `‚Ä¢ üöö Frete gr√°tis em compras acima de R$ 80\n` +
      `‚Ä¢ üíä Lembretes de medica√ß√£o\n\n` +
      `**N√≠veis do Programa:**\n` +
      `‚Ä¢ ü•â Bronze (0-499 pontos): 1x pontos\n` +
      `‚Ä¢ ü•à Prata (500-999 pontos): 1.5x pontos\n` +
      `‚Ä¢ ü•á Ouro (1000+ pontos): 2x pontos\n\n` +
      `**Como Participar:**\n` +
      `Cadastre-se gratuitamente em nosso site ou app!`;

    return {
      success: true,
      message,
      data: {
        pointsRatio: 1, // 1 ponto por ‚Ç¨ 1
        redeemRatio: 0.1, // ‚Ç¨ 0.10 por ponto
        levels: {
          bronze: { min: 0, max: 499, multiplier: 1 },
          silver: { min: 500, max: 999, multiplier: 1.5 },
          gold: { min: 1000, max: null, multiplier: 2 },
        },
        benefits: ["Desconto anivers√°rio 20%", "Ofertas exclusivas", "Portes gr√°tis ‚Ç¨ 40+", "Lembretes medica√ß√£o"],
      },
    };
  },
});

// Exportar todas as tools extras
export const extraTools = {
  show_store_hours: showStoreHoursTool,
  show_promotions: showPromotionsTool,
  contact_pharmacist: contactPharmacistTool,
  prescription_info: prescriptionInfoTool,
  loyalty_program: loyaltyProgramTool,
};
